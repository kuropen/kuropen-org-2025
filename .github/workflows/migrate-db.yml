# SPDX-FileCopyrightText: 2024 Kuropen
#
# SPDX-License-Identifier: LicenseRef-KUROPEN-ORG-PUBLIC-CODE

name: "Database Migration"

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/migrate-db.yml
      - database/migrations/*
  pull_request:
    types:
        - opened
        - synchronize
        - reopened
  pull_request_target:
    branches:
      - main

jobs:
  stg-migration:
    name: "Run migration on Staging"
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request_target' }}
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      - name: Setup PHP extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pgsql, readline, xml
          tools: composer
      - name: Setting target service
        # -e option is the target environment name:
        # production for main branch, "kuropen-org-2025-pr-<PR_NUMBER>" for PR
        run: railway link -p ${{ secrets.RAILWAY_PROJECT_ID }} -e ${{ github.ref == 'refs/heads/main' && 'staging' || format('kuropen-org-2025-pr-{0}', github.event.pull_request.number) }} -s web
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      - name: Fetch environment variables on Railway
        run: railway variables --json | jq -r 'to_entries | .[] | select(.key != "DATABASE_URL") | [.key, (.value | @sh)] | join("=")' > .env
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      - name: Checking Public Database URL on Railway
        id: db_check
        run: railway variables -s Postgres --json | jq -r 'to_entries | .[] | select(.key == "DATABASE_PUBLIC_URL") | ["DATABASE_URL", (.value | @sh)] | join("=")' >> "$GITHUB_OUTPUT"
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      - name: Installing PHP dependencies
        run: composer install
      - name: Wait 1 minute for the database to be ready
        run: sleep 60
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
      - name: Run migration with seed
        run: php artisan migrate:fresh --seed --force
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        env:
          DATABASE_URL: ${{ steps.db_check.outputs.DATABASE_URL }}
      - name: Run migration
        run: php artisan migrate --force
        if: github.event_name != 'pull_request' || github.event.action != 'opened'
        env:
          DATABASE_URL: ${{ steps.db_check.outputs.DATABASE_URL }}
  prd-migration:
    name: "Run migration on Production"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
        - uses: actions/checkout@v4
        - name: Use Node.js 20
          uses: actions/setup-node@v4
          with:
            node-version: 20
        - name: Install Railway CLI
          run: npm install -g @railway/cli
        - name: Setup PHP extension
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.3'
            extensions: mbstring, pgsql, readline, xml
            tools: composer
        - name: Setting target service
          # -e option is the target environment name:
          # production for main branch, "kuropen-org-2025-pr-<PR_NUMBER>" for PR
          run: railway link -p ${{ secrets.RAILWAY_PROJECT_ID }} -e production -s web
          env:
            RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        - name: Fetch environment variables on Railway
          run: railway variables --json | jq -r 'to_entries | .[] | select(.key != "DATABASE_URL") | [.key, (.value | @sh)] | join("=")' > .env
          env:
            RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        - name: Checking Public Database URL on Railway
          id: db_check
          run: railway variables -s Postgres --json | jq -r 'to_entries | .[] | select(.key == "DATABASE_PUBLIC_URL") | ["DATABASE_URL", (.value | @sh)] | join("=")' >> "$GITHUB_OUTPUT"
          env:
            RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        - name: Installing PHP dependencies
          run: composer install
        - name: Wait 1 minute for the database to be ready
          run: sleep 60
          if: github.event_name == 'pull_request' && github.event.action == 'opened'
        - name: Run migration with seed
          run: php artisan migrate:fresh --seed --force
          if: github.event_name == 'pull_request' && github.event.action == 'opened'
          env:
            DATABASE_URL: ${{ steps.db_check.outputs.DATABASE_URL }}
        - name: Run migration
          run: php artisan migrate --force
          if: github.event_name != 'pull_request' || github.event.action != 'opened'
          env:
            DATABASE_URL: ${{ steps.db_check.outputs.DATABASE_URL }}
