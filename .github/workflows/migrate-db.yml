# SPDX-FileCopyrightText: 2024 Kuropen
#
# SPDX-License-Identifier: LicenseRef-KUROPEN-ORG-PUBLIC-CODE

name: "Database Migration"

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/migrate-db.yml
      - database/migrations/*
  pull_request:
    types:
        - opened
        - synchronize
        - reopened
  pull_request_target:
    branches:
      - main

jobs:
  stg-migration:
    name: "Run migration on Staging"
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request_target' }}
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup PHP extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.5'
          extensions: mbstring, pgsql, readline, xml
          tools: composer
      - name: Fetch environment variables on Railway
        run: |
          curl -H 'Content-Type: application/json' -d '{"apiToken":"${{ secrets.RAILWAY_API_TOKEN }}", "environmentName":"${{ (github.event_name != 'pull_request' && github.event_name != 'pull_request_target') && 'staging' || format('kuropen-org-2025-pr-{0}', github.event.pull_request.number) }}", "serviceName": "web"}' ${{ secrets.WF_PROXY_URL }} | jq -r 'to_entries | .[] | select(.key != "DATABASE_URL") | [.key, (.value | @sh)] | join("=")' > .env
      - name: Checking Public Database URL on Railway
        id: db_check
        run: |
          curl -H 'Content-Type: application/json' -d '{"apiToken":"${{ secrets.RAILWAY_API_TOKEN }}", "environmentName":"${{ (github.event_name != 'pull_request' && github.event_name != 'pull_request_target') && 'staging' || format('kuropen-org-2025-pr-{0}', github.event.pull_request.number) }}", "serviceName": "Postgres"}' ${{ secrets.WF_PROXY_URL }} | jq -r 'to_entries | .[] | select(.key == "DATABASE_PUBLIC_URL") | ["DATABASE_URL", (.value | @sh)] | join("=")' >> .env
      - name: Installing PHP dependencies
        run: composer install
      - name: Wait 1 minute for the database to be ready
        run: sleep 60
        if: (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.action == 'opened'
      - name: Run migration with seed
        run: php artisan migrate:fresh --seed --force
        if: (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.action == 'opened'
      - name: Run migration
        run: php artisan migrate --force
        if: (github.event_name != 'pull_request' && github.event_name != 'pull_request_target') || github.event.action != 'opened'
  prd-migration:
    name: "Run migration on Production"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request_target'
    steps:
        - uses: actions/checkout@v4
        - name: Setup PHP extension
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.4.5'
            extensions: mbstring, pgsql, readline, xml
            tools: composer
        - name: Fetch environment variables on Railway
          run:  |
            curl -H 'Content-Type: application/json' -d '{"apiToken":"${{ secrets.RAILWAY_API_TOKEN }}", "environmentName":"production", "serviceName": "web"}' ${{ secrets.WF_PROXY_URL }} | jq -r 'to_entries | .[] | select(.key != "DATABASE_URL") | [.key, (.value | @sh)] | join("=")' > .env
        - name: Checking Public Database URL on Railway
          id: db_check
          run: |
            curl -H 'Content-Type: application/json' -d '{"apiToken":"${{ secrets.RAILWAY_API_TOKEN }}", "environmentName":"production", "serviceName": "Postgres"}' ${{ secrets.WF_PROXY_URL }} | jq -r 'to_entries | .[] | select(.key == "DATABASE_PUBLIC_URL") | ["DATABASE_URL", (.value | @sh)] | join("=")' >> .env
        - name: Installing PHP dependencies
          run: composer install
        - name: Wait 1 minute for the database to be ready
          run: sleep 60
          if: (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.action == 'opened'
        - name: Run migration with seed
          run: php artisan migrate:fresh --seed --force
          if: (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.action == 'opened'
        - name: Run migration
          run: php artisan migrate --force
          if: github.event_name != 'pull_request' || github.event.action != 'opened'
